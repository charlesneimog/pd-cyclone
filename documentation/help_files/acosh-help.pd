#N canvas 504 63 564 445 10;
#X obj 4 417 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 272 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 334 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 371 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 89 346 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 89 282 cnv 17 3 45 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 226 133 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 12 #ececec #000000 #000000 0 256;
#X obj 190 130 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 123 347 float;
#X text 123 281 float;
#X text 129 311 bang;
#X text 105 386 1) float;
#X text 173 347 - the hyperbolic arc-cosine of the input;
#X text 81 93 [acosh] calculates the hyperbolic arc-cosine of a given number.;
#X text 173 386 - initially stored input value (default 0);
#X text 173 279 - input to hyperbolic arc-cosine function \, this value is stored and updates the argument, f 54;
#X text 173 311 - calculates output according to the stored input;
#X floatatom 226 200 0 0 0 0 - - - 0;
#X obj 226 171 cyclone/acosh 30;
#X text 18 60 Hyperbolic arc-cosine function;
#X obj 2 4 header acosh;
#X text 121 237 see also:;
#X text 287 236 as a Vanilla alternative;
#X obj 186 236 expr acosh($f1);
#X connect 6 0 18 0;
#X connect 7 0 18 0;
#X connect 18 0 17 0;
