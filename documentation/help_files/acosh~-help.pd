#N canvas 492 35 565 486 10;
#X obj 7 450 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 7 345 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 381 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 7 418 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 126 393 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 160 353 signal;
#X text 160 393 signal;
#X text 160 425 (none);
#X obj 126 353 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 216 394 - the hyperbolic arc-cosine of the input;
#X text 216 354 - input to hyperbolic arc-cosine function;
#X obj 206 202 cyclone/acosh~;
#X obj 2 7 header acosh~;
#X text 18 62 Signal hyperbolic arc-cosine function;
#X obj 206 172 sig~;
#X obj 206 231 cyclone/snapshot~ 1;
#X obj 206 261 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 206 148 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 503 69 dsponoff~;
#X text 102 302 see also:;
#X obj 167 302 expr~ acosh($v1);
#X text 58 91 Use [acosh~] to output the hyperbolic arc-cosine of each input sample (probably only useful for mathematical calculations). For input values less than 1 \, the output is zero!, f 62;
#X text 277 301 as a Vanilla alternative;
#X connect 11 0 15 0;
#X connect 14 0 11 0;
#X connect 15 0 16 0;
#X connect 17 0 14 0;
