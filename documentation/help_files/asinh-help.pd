#N canvas 432 55 561 471 10;
#X obj 3 439 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 3 288 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 356 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 393 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 92 368 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 92 298 cnv 17 3 46 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 239 152 nbx 6 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 12 #ececec #000000 #000000 0 256;
#X obj 203 149 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 96 93 Use the [asinh] object to calculate and output the hyperbolic arc-sine of any given number.;
#X text 130 369 float;
#X floatatom 239 220 0 0 0 0 - - - 0;
#X text 130 297 float;
#X text 135 326 bang;
#X text 182 326 - calculates output according to the stored input;
#X text 181 297 - input to hyperbolic arc-sine function \, this value is stored and updates the argument;
#X text 182 369 - the hyperbolic arc-sine of the input;
#X text 113 408 1) float;
#X text 182 408 - initially stored input value (default 0);
#X obj 239 190 cyclone/asinh 100;
#X text 23 61 Hyperbolic arc-sine function;
#X obj 2 1 header asinh;
#X text 121 255 see also:;
#X text 287 254 as a Vanilla alternative;
#X obj 186 254 expr asinh($f1);
#X connect 6 0 18 0;
#X connect 7 0 18 0;
#X connect 18 0 10 0;
